import os

def print_project_structure(start_path, indent=''):
    print(f"{indent}üìÅ {os.path.basename(start_path)}")
    indent += '    '
    for item in sorted(os.listdir(start_path)):  # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏
        item_path = os.path.join(start_path, item)
        if os.path.isdir(item_path):
            print_project_structure(item_path, indent)
        else:
            print(f"{indent}üìÑ {item}")

project_path = r"D:\pyCharm\python_basic_diploma\city_expert"
print_project_structure(project_path)


#
# –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞


import os
import shutil
from pathlib import Path


def clean_pycache(root_path):
  root = Path(root_path)
  print(f"üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –≤ {root}...")

  # –£–¥–∞–ª—è–µ–º –≤—Å–µ __pycache__ –ø–∞–ø–∫–∏
  for pycache_dir in root.glob("**/__pycache__"):
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ {pycache_dir}")
    shutil.rmtree(pycache_dir, ignore_errors=True)

  # –£–¥–∞–ª—è–µ–º –≤—Å–µ .pyc –∏ .pyo —Ñ–∞–π–ª—ã
  for pyc_file in root.glob("**/*.pyc"):
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ {pyc_file}")
    pyc_file.unlink(missing_ok=True)

  for pyo_file in root.glob("**/*.pyo"):
    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ {pyo_file}")
    pyo_file.unlink(missing_ok=True)

  print("‚úÖ –ì–æ—Ç–æ–≤–æ! –ö–µ—à –æ—á–∏—â–µ–Ω.")
#

# –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à –ø—É—Ç—å)
project_path = r"D:\pyCharm\python_basic_diploma\city_expert"
clean_pycache(project_path)


#
#
# import pytest
# from city_expert.services.places_api import PlacesAPI
#
#
# @pytest.mark.asyncio
# async def test_api_key():
#     api_key = "2c6ab6fe4dmsh658ab187ecf5945p1020f3jsn2593eb117114"
#     async with PlacesAPI(api_key) as api:
#         # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
#         test_cases = [
#             {"query": "—Ä–µ—Å—Ç–æ—Ä–∞–Ω", "lat": 55.75, "lon": 37.61},  # –ú–æ—Å–∫–≤–∞
#             {"query": "cafe", "lat": 40.71, "lon": -74.00},  # –ù—å—é-–ô–æ—Ä–∫
#             {"query": "restaurant", "lat": 48.85, "lon": 2.35}  # –ü–∞—Ä–∏–∂
#         ]
#
#         for case in test_cases:
#             results = await api.search(
#                 case["query"],
#                 latitude=case["lat"],
#                 longitude=case["lon"]
#             )
#             print(f"–ó–∞–ø—Ä–æ—Å: '{case['query']}' –≤ ({case['lat']}, {case['lon']})")
#             print(f"–ù–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç: {len(results)}")
#             if results:
#                 for place in results[:3]:
#                     print(f"üîπ {place.name} | –ê–¥—Ä–µ—Å: {place.address}")
#             else:
#                 print("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –æ—à–∏–±–∫–∞ API")
#             print("-" * 50)